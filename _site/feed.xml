<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
<title type="text">Kraig Walker</title>
<generator uri="https://github.com/mojombo/jekyll">Jekyll</generator>
<link rel="self" type="application/atom+xml" href="http://kraigwalker.com/feed.xml" />
<link rel="alternate" type="text/html" href="http://kraigwalker.com" />
<updated>2013-12-02T10:49:09+00:00</updated>
<id>http://kraigwalker.com/</id>
<author>
  <name>Kraig Walker</name>
  <uri>http://kraigwalker.com/</uri>
  <email>kraig_walker@me.com</email>
</author>


<entry>
  <title type="html"><![CDATA[Creating an Isometric Camera in Unity]]></title>
  <link rel="alternate" type="text/html" href="http://kraigwalker.com/articles/creating-an-isometric-camera-in-unity" />
  <id>http://kraigwalker.com/articles/creating-an-isometric-camera-in-unity</id>
  <published>2013-10-09T00:00:00+01:00</published>
  <updated>2013-10-09T00:00:00+01:00</updated>
  <author>
    <name>Kraig Walker</name>
    <uri>http://kraigwalker.com</uri>
    <email>kraig_walker@me.com</email>
  </author>
  <content type="html">&lt;p&gt;In addition to rendering a typical three-dimensional perspective, Unity also allows Cameras to use Orthographic projection instead, making it a fairly simple process to create your own isometric camera.&lt;/p&gt;

&lt;h3 id=&quot;game-isometric-vs-true-isometric&quot;&gt;Game Isometric vs True Isometric&lt;/h3&gt;

&lt;p&gt;True isometric rendering requires a camera rotation of &lt;strong&gt;(54.736, 0, 45)&lt;/strong&gt;. You can see that that 54.735 isn’t really a clean number, and actually creates a lot of hassle when rendering things on the grid of pixels that is your monitor screen.&lt;/p&gt;

&lt;p&gt;Thankfully, smart 2D graphics programmers identified this pretty quickly, and found that a similar perspective can be created by using a camera rotation of &lt;strong&gt;(60, 0, 45)&lt;/strong&gt; - much nicer to work with. It may not be true isometric, but it’s the camera angle you’re most likely used to when playing games, and maintains a 2:1 ratio of pixels. If you use grid paper to design your levels first, you’ll be able to replicate the on screen visuals by drawing two squares along for every one square up.&lt;/p&gt;

&lt;h3 id=&quot;down-to-business&quot;&gt;Down To Business&lt;/h3&gt;

&lt;p&gt;Math lesson out the way, create a new scene (or open one you’d prefer to work with).&lt;/p&gt;

&lt;p&gt;In the default blank scene you get with Unity all you’ll have is the basic MainCamera, which we’ll modify in just a sec. In my scene I added a Quad Primitive (available from Unity 4.2 onward) and rotated it so that it was lying on the XZ axis (like the ground, basically) and scaled it up a bit.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://kraigwalker.com/images/isometric_step1.jpg&quot; alt=&quot;A Simple Quad Scene &quot; /&gt;&lt;/p&gt;

&lt;p&gt;The next step is to modify the MainCamera that we want to use modifying it’s properties in the inspector panel like so…&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://kraigwalker.com/images/camera_settings.jpg&quot; alt=&quot;MainCamera Settings&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The key changes worth paying attention to are the position, rotation and the projection variables of our camera. I also modified the size variable and the Near Clipping Pane to avoid cutting off our view if we stray too far.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://kraigwalker.com/images/clipping_error.jpg&quot; alt=&quot;A common rendering error when the clipping pane is too small&quot; title=&quot;A common rendering error when the clipping pane is too small&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;If you find yourself seeing things like the screenshot below, adjust your clipping panes.&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&quot;adding-keyboard-controls&quot;&gt;Adding Keyboard Controls&lt;/h3&gt;

&lt;p&gt;To add a bit of interactivity we’re going to need to write a &lt;code&gt;CameraController&lt;/code&gt; script that will update the position of the camera in response to user input.&lt;/p&gt;

&lt;p&gt;Highlight your Assets folder in the Project pane like so. Click the &lt;strong&gt;Create&lt;/strong&gt; dropdown and create a new C# script. This will create a barebones &lt;code&gt;MonoBehaviour&lt;/code&gt; for you.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://kraigwalker.com/images/project_tab.jpg&quot; alt=&quot;Create a C# Script in the Assets Folder&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Rename the script to call it &lt;strong&gt;CameraController.cs&lt;/strong&gt; and open it up in your favourite text editor.&lt;/p&gt;

&lt;p&gt;All of the default code can stay. We use the &lt;code&gt;Start()&lt;/code&gt; function to setup our initial variables, getting the initial position of the camera that we set in the Inspector. &lt;code&gt;Update()&lt;/code&gt; handles key input, and moves the camera.&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/6919914.js&quot;&gt; &lt;/script&gt;

&lt;h3 id=&quot;fin&quot;&gt;Fin&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;http://kraigwalker.com/images/final_capture.jpg&quot; alt=&quot;Our quad scene with a working isometric view&quot; /&gt;&lt;/p&gt;

&lt;p&gt;That wasn’t too bad. There’s still more to do if we want to really polish our camera.&lt;/p&gt;

&lt;p&gt;In the next post we’ll look at how to rotate the camera around the the center point of the viewport and how to zoom in and out.&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://kraigwalker.com/articles/creating-an-isometric-camera-in-unity&quot;&gt;Creating an Isometric Camera in Unity&lt;/a&gt; was originally published by Kraig Walker at &lt;a href=&quot;http://kraigwalker.com&quot;&gt;Kraig Walker&lt;/a&gt; on October 09, 2013.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[An Idea: Pimp My Issue]]></title>
  <link rel="alternate" type="text/html" href="http://kraigwalker.com/articles/an-idea-pimp-my-issue" />
  <id>http://kraigwalker.com/articles/an-idea-pimp-my-issue</id>
  <published>2013-09-21T00:00:00+01:00</published>
  <updated>2013-09-21T00:00:00+01:00</updated>
  <author>
    <name>Kraig Walker</name>
    <uri>http://kraigwalker.com</uri>
    <email>kraig_walker@me.com</email>
  </author>
  <content type="html">&lt;p&gt;One of the things I’ve seen more and more when working with other developers is a sprawling variation in the organizational and presentational structure of Issue tags in projects. Issue tags are one of those little procrasta-tools in &lt;a href=&quot;https://github.com/blog/831-issues-2-0-the-next-generation&quot;&gt;Github Issues&lt;/a&gt; which you could play with for hours, creating your own labeling system, setting out a colour system that’s just right, before any actual work has even been done.&lt;/p&gt;

&lt;p&gt;If you’re someone who enjoys working with &lt;a href=&quot;https://github.com/blog/831-issues-2-0-the-next-generation&quot;&gt;Github Issues&lt;/a&gt; - &lt;em&gt;and I know I am&lt;/em&gt; - you’ll appreciate how being able to tag issues according to their type, priority, complexity, cost or subject area make searching through a seemingly endless list of tasks easier and more intuitive.&lt;/p&gt;

&lt;p&gt;It’s not possible to create a single collection of tags that work against every project, as every project has a different scope and set of priorities. The default Issue tags leave a lot to be desired, and most programmers and project managers aren’t known for their superior colour theory skills.&lt;/p&gt;

&lt;p&gt;I’ve had an idea for a site for a while now that runs in a similar vein to &lt;a href=&quot;http://colourlovers.com&quot;&gt;COLOURlovers&lt;/a&gt; or &lt;a href=&quot;http://kuler.adobe.com&quot;&gt;Adobe Kuler&lt;/a&gt;. It’s a site which allows people to easily adopt pre-packaged Issue naming schemes and colour themes that cater to their projects. People can also create and upload their own issue schemes for others to use - it would be interesting to track what schemes rise to the top.&lt;/p&gt;

&lt;p&gt;I’ve recently read through a fantastic book called &lt;a href=&quot;http://executebook.com/&quot;&gt;&lt;em&gt;Execute&lt;/em&gt;&lt;/a&gt; by &lt;a href=&quot;https://twitter.com/drewwilson&quot;&gt;Drew Wilson&lt;/a&gt; and &lt;a href=&quot;https://twitter.com/joshlong&quot;&gt;Josh Long&lt;/a&gt;, which they were able to write in three days and had published to print just five days after that. It’s a pretty inspiring and beautifully made book, and in the authors footsteps I’m going to see how quickly I can produce a web app of similar build quality with openness and community at the core.&lt;/p&gt;

&lt;p&gt;I’ve drafted up a very brief spec of what I’d like to do so far:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Hosting&lt;/strong&gt; - &lt;a href=&quot;https://www.heroku.com/&quot;&gt;Heroku&lt;/a&gt;, &lt;a href=&quot;https://www.appfog.com/&quot;&gt;Appfog&lt;/a&gt; or &lt;a href=&quot;https://www.nodejitsu.com/&quot;&gt;Nodejitsu&lt;/a&gt; (something that’s Node.js and has an open source or free option)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Database&lt;/strong&gt; - &lt;a href=&quot;http://couchdb.apache.org/&quot;&gt;CouchDB&lt;/a&gt; (I read good things about it)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Creators Login With Github&lt;/strong&gt; - this allows for creative attribution to the theme’s original creator, and we can add profile information about the author to a theme’s page.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Be As Static As Possible&lt;/strong&gt; - I like the idea of working with simple JSON files to store different themes. That’s why I’m choosing to use CouchDB. It’s also because I’m not much of a back-end guy yet, so being able to work with JSON files throughout and Javascript calls to the DB are a big plus.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Data Export&lt;/strong&gt; - Although there is ability to import Issue tag schemes into Github (not yet anyway) I feel it’s important to allow people to export the data that makes up the theme, either back out as the JSON file, or as a text file of some sort.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Theme Previews&lt;/strong&gt; - Preview each tag like it were in Github - different lightness values will influence whether the text colour of the issue tag is dark or light, so a preview option is important.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;MVC&lt;/strong&gt; - I also want to build the app using &lt;a href=&quot;http://angularjs.org/&quot;&gt;AngularJS&lt;/a&gt; as a front-end MVC framework, with &lt;a href=&quot;http://expressjs.com/&quot;&gt;Express&lt;/a&gt; mirroring the back-end. Despite needing to tweak express a little bit to work with Angular, I think it’s a fairly sensible move.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Responsive&lt;/strong&gt; - Because it’s 2013.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Copying colour codes needs to be as easy as possible&lt;/strong&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I’d appreciate any feedback or ideas if you’re interested in getting involved, or if you’ve had any quibbles with keeping your Issue system clean and tidy. &lt;strong&gt;Comments are below :)&lt;/strong&gt;&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://kraigwalker.com/articles/an-idea-pimp-my-issue&quot;&gt;An Idea: Pimp My Issue&lt;/a&gt; was originally published by Kraig Walker at &lt;a href=&quot;http://kraigwalker.com&quot;&gt;Kraig Walker&lt;/a&gt; on September 21, 2013.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[Blog Like A Hacker]]></title>
  <link rel="alternate" type="text/html" href="http://kraigwalker.com/articles/blog-like-a-hacker" />
  <id>http://kraigwalker.com/articles/blog-like-a-hacker</id>
  <published>2013-07-31T00:00:00+01:00</published>
  <updated>2013-07-31T00:00:00+01:00</updated>
  <author>
    <name>Kraig Walker</name>
    <uri>http://kraigwalker.com</uri>
    <email>kraig_walker@me.com</email>
  </author>
  <content type="html">&lt;p&gt;Oh look! It’s another complete refresh of your website Kraig!&lt;/p&gt;

&lt;p&gt;I know, I’m not really bothered about migrating 6 or so posts and reformatting them again.
Progressively my blogging systems have become more and more minimalistic, starting out with a full-on Wordpress installation and now having everything being held in a bare-bones &lt;a href=&quot;http://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt; setup&lt;/p&gt;

&lt;p&gt;It’s a simple premise really. Rather than having a server churn out posts based on PHP code at run time, Jekyll precompiles sites into static HTML pages. That site is then pushed not to a server, but a git repository linked to a domain name, thus you have your own personal website - complete with backup service - from a mere &lt;a href=&quot;http://pages.github.com/&quot;&gt;Github&lt;/a&gt; Repo.&lt;/p&gt;

&lt;p&gt;It’s not for everyone. You need to be okay with command lines and the closest thing you’ll get to a WYSIWYG is opening up a &lt;a href=&quot;http://daringfireball.net/projects/markdown/&quot;&gt;markdown&lt;/a&gt; file in &lt;a href=&quot;http://www.sublimetext.com/&quot;&gt;Sublime Text&lt;/a&gt;, but by distilling the writing process into the absolute bare essentials, I can minimize distractions one might have if they have a whole suite of plugins and buttons to play with.&lt;/p&gt;

&lt;p&gt;I’ve tried things like &lt;a href=&quot;http://octopress.org/&quot;&gt;Octopress&lt;/a&gt; and &lt;a href=&quot;http://docpad.org/&quot;&gt;DocPad&lt;/a&gt; in the past. I think DocPad is far superior to Octopress, as it doesn’t suffocate you with pre-existing theme and layout decisions, but for my needs it’s a bit of overkill to make my templates compatible. Focussing on content, for me, is a much more enjoyable use.&lt;/p&gt;

&lt;p&gt;So yeah, pretty bare so far. I want this new approach to be more about posting useful stuff: &lt;em&gt;Code snippets&lt;/em&gt;, &lt;em&gt;handy projects&lt;/em&gt;, &lt;em&gt;tutorials&lt;/em&gt;, &lt;em&gt;workflows&lt;/em&gt;, etc. rather than comment and opinion stuff. An opinion is only valid when there is hard proof one knows what their talking about after all…&lt;/p&gt;

&lt;p&gt;How very &lt;a href=&quot;http://31.media.tumblr.com/78cbe6bddaa0da4ad8172b0db01ae89e/tumblr_mo6z3hNZAI1rx564jo1_500.gif&quot;&gt;hipster&lt;/a&gt; of you, Mr Walker…&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://kraigwalker.com/articles/blog-like-a-hacker&quot;&gt;Blog Like A Hacker&lt;/a&gt; was originally published by Kraig Walker at &lt;a href=&quot;http://kraigwalker.com&quot;&gt;Kraig Walker&lt;/a&gt; on July 31, 2013.&lt;/p&gt;</content>
</entry>

</feed>